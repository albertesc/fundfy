---
import image from "@assets/join.jpg";
import Input from "@atoms/Input.astro";
import Textarea from "@atoms/Textarea.astro";
import Button from "@atoms/Button.astro";
import { actions } from "astro:actions";
import { getI18N } from "@i18n/index.js";

const { currentLocale } = Astro;
const t = getI18N({ currentLocale });
---

<section class="pb-12 md:py-24 bg-white text-dark z-20 relative" id="join">
  <div class="relative">
    <div class="md:absolute inset-y-0 right-0 w-full md:w-[40%] h-full">
      <img
        src={image.src}
        class="object-cover object-center w-full h-full md:rounded-bl-3xl md:rounded-tl-3xl mb-12 md:mb-0"
      />
    </div>
    <div class="max-w-[1160px] mx-auto px-4">
      <div class="flex flex-wrap -mx-4">
        <div class="w-full md:w-1/2 px-4">
          <h2 class="mb-12 md:mb-24 text-xl" set:html={t.contact.TITLE} />
          <h3
            class="text-[40px] md:text-[56px] text-balance font-light leading-none mb-7"
          >
            {t.contact.SUBTITLE}
          </h3>
          <form
            action={actions.contact}
            method="POST"
            aria-labelledby="form-title"
            novalidate
          >
            <fieldset>
              <div class="flex flex-col gap-2.5">
                <Input
                  name="name"
                  label={t.contact.FORM.NAME}
                  error={t.contact.FORM.ERROR_NAME}
                  required
                />
                <Input
                  name="email"
                  label={t.contact.FORM.EMAIL}
                  error={t.contact.FORM.ERROR_EMAIL}
                  required
                />
                <Input name="subject" label={t.contact.FORM.SUBJECT} />
                <Textarea name="message" label={t.contact.FORM.MESSAGE} />
              </div>

              <p class="text-sm mt-4 mb-6">{t.contact.FORM.MANDATORY_FIELDS}</p>

              <span class="success-message text-primary my-4 hidden">
                {t.contact.FORM.SUCCESS_MESSAGE}
              </span>

              <Button tag="button">{t.contact.FORM.SUBMIT}</Button>
            </fieldset>

            <small
              class="text-gray-400 mt-14 block text-[12px]"
              set:html={t.contact.FORM.PRIVACY_POLICY}
            />
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("#join form") as HTMLFormElement | null;

    if (!form) return;

    form.addEventListener("submit", function (e) {
      e.preventDefault();

      const name = form.querySelector(
        '[name="name"]'
      ) as HTMLInputElement | null;
      const email = form.querySelector(
        '[name="email"]'
      ) as HTMLInputElement | null;
      let valid = true;

      if (!name || !email) return;

      form
        .querySelectorAll(".error-message")
        .forEach((el) => el.classList.add("hidden"));
      form.querySelectorAll("input, textarea").forEach((el) => {
        el.classList.remove(
          "bg-red-100",
          "focus:ring-red-500",
          "placeholder-red-400"
        );
      });

      if (!name.value.trim()) {
        showError(name);
        valid = false;
      }

      if (!email.value.trim()) {
        showError(email);
        valid = false;
      } else if (!/^\S+@\S+\.\S+$/.test(email.value)) {
        showError(email);
        valid = false;
      }

      if (!valid) return;

      showSuccess();

      const formData = new FormData(form);
      fetch(form.action, {
        method: form.method,
        body: formData,
        headers: {
          "X-Requested-With": "XMLHttpRequest",
        },
      });
    });

    function showError(input: HTMLInputElement) {
      const errorMsg = input.parentNode?.querySelector(".error-message");
      errorMsg?.classList.remove("hidden");
      input.classList.add(
        "bg-red-100",
        "focus:ring-red-500",
        "placeholder-red-400"
      );
    }

    function showSuccess() {
      if (!form) return;
      const successMsg = form.querySelector(".success-message");
      successMsg?.classList.remove("hidden");
      successMsg?.classList.add("block");
      form.reset();
    }
  });
</script>
